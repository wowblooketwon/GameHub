<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8" />
<title>Snake Game</title>
<style>
  body { background: #000; color: #0f0; font-family: monospace; text-align: center; margin: 0; }
  canvas { background: #000; display: block; margin: 20px auto; border: 1px solid #0f0; }
</style>
</head>
<body>
<h1>Snake Game</h1>
<canvas id="game" width="400" height="400"></canvas>
<script>
  const canvas = document.getElementById('game');
  const ctx = canvas.getContext('2d');
  const grid = 20;
  let snake = [{x: 160, y: 160}];
  let dx = grid;
  let dy = 0;
  let food = {x: 0, y: 0};
  let score = 0;

  function randomFood() {
    food.x = Math.floor(Math.random() * 20) * grid;
    food.y = Math.floor(Math.random() * 20) * grid;
  }

  function gameLoop() {
    ctx.clearRect(0, 0, canvas.width, canvas.height);

    // Move snake
    const head = {x: snake[0].x + dx, y: snake[0].y + dy};

    // Check wall collision
    if (head.x < 0 || head.x >= canvas.width || head.y < 0 || head.y >= canvas.height) {
      alert('Game Over! Your score: ' + score);
      snake = [{x: 160, y: 160}];
      dx = grid;
      dy = 0;
      score = 0;
      randomFood();
      return;
    }

    // Check self collision
    for (let segment of snake) {
      if (head.x === segment.x && head.y === segment.y) {
        alert('Game Over! Your score: ' + score);
        snake = [{x: 160, y: 160}];
        dx = grid;
        dy = 0;
        score = 0;
        randomFood();
        return;
      }
    }

    snake.unshift(head);

    // Eat food
    if (head.x === food.x && head.y === food.y) {
      score++;
      randomFood();
    } else {
      snake.pop();
    }

    // Draw food
    ctx.fillStyle = 'red';
    ctx.fillRect(food.x, food.y, grid, grid);

    // Draw snake
    ctx.fillStyle = 'lime';
    for (let segment of snake) {
      ctx.fillRect(segment.x, segment.y, grid, grid);
    }

    setTimeout(gameLoop, 100);
  }

  window.addEventListener('keydown', e => {
    switch(e.key) {
      case 'ArrowUp': if (dy === 0) { dx = 0; dy = -grid; } break;
      case 'ArrowDown': if (dy === 0) { dx = 0; dy = grid; } break;
      case 'ArrowLeft': if (dx === 0) { dx = -grid; dy = 0; } break;
      case 'ArrowRight': if (dx === 0) { dx = grid; dy = 0; } break;
    }
  });

  randomFood();
  gameLoop();
</script>
</body>
</html>
